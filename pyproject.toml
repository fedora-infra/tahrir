[tool.poetry]
name = "tahrir"
version = "2.0.0"
description = "A webapp for issuing your own Open Badges"

license = "AGPLv3+ with additional permission"

authors = [
  "Fedora Infrastructure <admin@fedoraproject.org>",
]

readme = 'README.md'  # Markdown files are supported
keywords = ["fedora"]
repository = "https://github.com/fedora-infra/tahrir"
homepage = "https://github.com/fedora-infra/tahrir"
documentation = "https://tahrir.readthedocs.io"

packages = [
    { include = "tahrir" },
]

include = [
    { path = "tox.ini", format = "sdist" },
    { path = "tests", format = "sdist" },
    { path = "docs", format = "sdist" },
    { path = "*.example", format = "sdist" },
    { path = "babel.cfg", format = "sdist" },
]

classifiers = [
    "Environment :: Web Environment",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[tool.poetry.dependencies]
python = "^3.9.0"
pydantic-settings = "^2.0.2"
flask = "^2.0.0 || ^3.0.0"
flask-wtf = ">=0.14"
flask-oidc = "^2.2.0"
flask-babel = "^2.0.0 || ^3.0.0"
flask-talisman = ">=0.8.0"
flask-healthz = ">=0.0.3"
whitenoise = "^6.0.0"
Babel = "^2.10.0"
tahrir-api = "^1.1.0"
sqlalchemy = "^2.0.29"
qrcode = "^7.4.2"
dogpile-cache = "^1.3.2"
docutils = "^0.20.1 || ^0.21.0"
python-dateutil = "^2.9.0.post0"
feedgen = "^1.0.0"
requests = "^2.31.0"
rdflib = "^7.0.0"
pytz = "^2024.1"
pillow = "^10.2.0"
magickwand = "^0.2"
gunicorn = {version = ">=21.2", optional = true}
psycopg2 = {version = "^2.9.9", optional = true}
fedora-messaging = "^3.5.0"
backoff = "^2.2.1"
tahrir-messages = "^1.0.1 || ^2.0.0"
pyyaml = "^6.0.1"

[tool.poetry.extras]
deploy = [
    "gunicorn",
    "psycopg2",
]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.1.1"
pytest-cov = ">=5.0.0"
coverage = {extras = ["toml"], version = ">=7.0.0"}
ruff = ">=0.3.5"
black = ">=24.3.0"
sphinx = ">=7.2.6"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "UP"]

[tool.ruff.lint.isort]
lines-after-imports = 2
order-by-type = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "E501"]
"tahrir/__init__.py" = ["F401"]

[tool.coverage.run]
branch = true
source = ["tahrir"]

[tool.coverage.paths]
source = ["tahrir"]

[tool.coverage.report]
# fail_under = 100  # one day, maybe!
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    # Don't complain if tests don't hit defensive assertion code
    "raise AssertionError",
    "raise NotImplementedError",
    "\\.\\.\\.",
]
omit = [
    "tahrir/__init__.py",
    "tests/*",
]
